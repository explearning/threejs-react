{"version":3,"sources":["components/Orbit.jsx","components/Background.jsx","components/Floor.jsx","components/Bulb.jsx","state.js","components/ColorPicker.jsx","components/BoundingBox.jsx","components/Model.jsx","components/Dragable.jsx","components/Cars.jsx","components/CameraControls.jsx","components/CameraButtons.jsx","components/Lights.jsx","App.js","reportWebVitals.js","index.js"],"names":["extend","OrbitControls","Orbit","useThree","camera","gl","attach","args","domElement","Background","props","texture","useLoader","THREE","formatted","useMemo","image","height","fromEquirectangularTexture","object","Floor","useBox","ref","receiveShadow","transparent","opacity","Bulb","castShadow","shadow-mapSize-height","shadow-mapSize-width","shadow-radius","emissive","state","activeMesh","activeMeshName","cameraPos","target","shouldUpdate","ColorPicker","handleClick","e","material","color","style","background","position","zIndex","left","right","margin","width","display","top","onClick","BoundingBox","offset","dims","visible","children","mass","api","scale","wireframe","Model","model","GLTFLoader","path","scene","traverse","child","isMesh","side","DragControls","Dragable","groupRef","useRef","controlsRef","useState","setChildren","useEffect","current","addEventListener","orbitControls","enabled","set","copy","velocity","transformGroup","Cars","fallback","Array","fill","CameraControls","useFrame","name","getObjectByName","lerp","update","clone","sub","length","bottom","textAlign","borderRadius","fontSize","fontWeight","border","cursor","CameraButtons","sets","1","2","num","Lights","intensity","App","shadowMap","focusDistance","focalLength","bokehScale","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.608052aa.chunk.js","sourcesContent":["import { extend, useThree } from 'react-three-fiber';\nimport {\n    OrbitControls\n} from 'three/examples/jsm/controls/OrbitControls';\nextend({ OrbitControls });\n\nconst Orbit = () => {\n    const { camera, gl } = useThree();\n    return (\n        <orbitControls \n            attach='orbitControls'\n            args={[camera, gl.domElement]} \n        />\n    )\n}\n\nexport default Orbit;","import { useLoader, useThree } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { useMemo } from 'react';\n\nconst Background = props => {\n    const texture = useLoader(\n        THREE.TextureLoader,\n        '/autoshop.jpg'\n    );\n\n    const { gl } = useThree();\n    const formatted = useMemo(() => \n        new THREE.WebGLCubeRenderTarget(\n                texture.image.height\n        ).fromEquirectangularTexture(gl, texture)\n    ,[])\n\n    return (\n        <primitive\n            attach='background'\n            object={formatted}\n        />\n    )\n}\n\nexport default Background;","import { useBox } from 'use-cannon';\n\nconst Floor = props => {\n    const [ref, api] = useBox(() => ({args: [20,1,10], ...props}))\n    return (\n        <mesh ref={ref} {...props} receiveShadow>\n            <boxBufferGeometry args={[200, 1, 200]} />\n            <meshPhysicalMaterial transparent opacity={0.2}/>\n        </mesh>\n    )\n}\n\nexport default Floor;","const Bulb = props => {\n    return (\n        <mesh {...props}>\n            <pointLight \n                castShadow\n                shadow-mapSize-height={2**10}\n                shadow-mapSize-width={2**10}\n                shadow-radius={10}\n            />\n            <sphereBufferGeometry args={[0.2, 20, 20]} />\n            <meshPhongMaterial emissive='yellow' />\n        </mesh>\n    )\n}\n\nexport default Bulb;","import * as THREE from 'three'\n// model3 name: \"Capot001_CAR_PAINT_0\"\n// model s name: \"object005_bod_0\"\nconst state = {\n    activeMesh: {},\n    activeMeshName: \"Capot001_CAR_PAINT_0\",\n    cameraPos: new THREE.Vector3(9,2,4),\n    target: new THREE.Vector3(4,0,0),\n    shouldUpdate: true\n}\n\nexport default state","import * as THREE from 'three';\nimport state from '../state'\n\nconst ColorPicker = props => {\n    const handleClick = e => {\n        if (!state.activeMesh) return;\n        state.activeMesh.material.color = new THREE.Color(e.target.style.background)\n    }\n    return (\n        <div \n            style={{ \n                position: 'absolute', \n                zIndex: 1,\n                left: 0,\n                right: 0,\n                margin: 'auto',\n                width: 'fit-content',\n                display: 'flex',\n                top: '20px'\n            }}\n        >\n            <div\n                onClick={handleClick}\n                style={{\n                    background: 'blue',\n                    height: 50,\n                    width: 50\n                }}\n            ></div>\n            <div\n                onClick={handleClick}\n                style={{\n                    background: 'yellow',\n                    height: 50,\n                    width: 50\n                }}\n            ></div>\n            <div\n                onClick={handleClick}\n                style={{\n                    background: 'white',\n                    height: 50,\n                    width: 50\n                }}\n            ></div>\n        </div>\n    )\n}\n\nexport default ColorPicker;","import { useBox } from 'use-cannon'\n\nconst BoundingBox = ({\n    position = [0,0,0],\n    offset = [0,0,0],\n    dims = [1,1,1],\n    visible = false,\n    children\n}) => {\n    const [ref, api] = useBox(() => ({ mass: 1, args: dims, position: position }))\n    return (\n        <group ref={ref} api={api}>\n            <mesh scale={dims} visible={visible}>\n                <boxBufferGeometry />\n                <meshPhysicalMaterial wireframe/>\n            </mesh>\n            <group position={offset}>\n                {children}\n            </group>\n        </group>\n    )\n}\n\nexport default BoundingBox","import { useLoader } from 'react-three-fiber';\nimport { \n    GLTFLoader \n} from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three'\n\nconst Model = props => {\n    const model = useLoader(\n        GLTFLoader,\n        props.path\n    )\n\n    model.scene.traverse(child => {\n        if (child.isMesh) {\n            child.castShadow = true\n            child.receiveShadow = true\n            child.material.side = THREE.FrontSide\n        }\n    })\n\n    return (\n        <primitive \n            object={model.scene}\n            scale={props.scale}\n        />\n    )\n}\n\nexport default Model;","import { \n    DragControls \n} from 'three/examples/jsm/controls/DragControls';\nimport { useRef, useEffect, useState } from 'react';\nimport { useThree, extend } from 'react-three-fiber';\nextend ({ DragControls });\n\nconst Dragable = props => {\n    const groupRef = useRef();\n    const controlsRef = useRef();\n    const [children, setChildren] = useState([])\n    const { camera, gl, scene } = useThree();\n\n    useEffect(() => {\n        setChildren(groupRef.current.children)\n    },[])\n    \n    useEffect(() => {\n        controlsRef.current.addEventListener(\n            'hoveron',\n            e => scene.orbitControls.enabled = false\n        )\n        controlsRef.current.addEventListener(\n            'hoveroff',\n            e => scene.orbitControls.enabled = true\n        )\n        controlsRef.current.addEventListener(\n            'dragstart',\n            e => {\n                e.object.api?.mass.set(0)\n            }\n        )\n        controlsRef.current.addEventListener(\n            'dragend',\n            e => e.object.api?.mass.set(1)\n        )\n        controlsRef.current.addEventListener(\n            'drag',\n            e => {\n                e.object.api?.position.copy(e.object.position)\n                e.object.api?.velocity.set(0,0,0)\n            }\n        )\n    },[children])\n\n    return (\n        <group ref={groupRef}>\n            <dragControls \n                transformGroup={props.transformGroup}\n                ref={controlsRef}\n                args={[children,camera, gl.domElement]}\n            />\n            {props.children}\n        </group>\n    )\n}\n\nexport default Dragable;","import { Suspense } from 'react'\nimport BoundingBox from './BoundingBox'\nimport Model from './Model'\nimport Dragable from './Dragable'\n\nconst Cars = ({ }) => {\n    return (\n        <Suspense fallback={null} >\n            <Dragable transformGroup>\n                <BoundingBox\n                    position={[4, 4, 0]}\n                    dims={[3, 2, 6]}\n                    offset={[0, -0.4, 0.8]}\n                >\n                    <Model\n                        path='/tesla_model_3/scene.gltf'\n                        scale={new Array(3).fill(0.01)}\n                    />\n                </BoundingBox>\n            </Dragable>\n            <Dragable transformGroup>\n                <BoundingBox\n                    position={[-4, 4, 0]}\n                    dims={[3, 2, 7]}\n                    offset={[0, -0.8, 0.2]}\n                >\n                    <Model\n                        path='/tesla_model_s/scene.gltf'\n                        scale={new Array(3).fill(0.013)}\n                    />\n                </BoundingBox>\n            </Dragable>\n        </Suspense>\n    )\n}\n\nexport default Cars","import { useFrame } from 'react-three-fiber'\nimport state from '../state'\n\nconst CameraControls = ({ }) => {\n\n    useFrame(({ camera, scene }) => {\n        if (state.activeMesh.name !== state.activeMeshName) {\n            state.activeMesh = scene.getObjectByName(\n                state.activeMeshName\n            ) || {}\n        }\n        if (state.shouldUpdate) {\n            camera.position.lerp(state.cameraPos,0.1)\n            scene.orbitControls.target.lerp(state.target,0.1)\n            scene.orbitControls.update()\n            const diff = \n                camera.position.clone()\n                .sub(state.cameraPos).length()\n            if (diff < 0.1) state.shouldUpdate = false\n        }\n    })\n    return (\n        null\n    )\n}\n\nexport default CameraControls","import state from '../state'\n\nconst style = {\n    zIndex: 1,\n    position: 'absolute',\n    bottom: '30vh',\n    // left: '40vw',\n    height: '30px',\n    width: '30px',\n    background: 'white',\n    textAlign: 'center',\n    borderRadius: '100%',\n    fontSize: 20,\n    fontWeight: 'bold',\n    opacity: 0.7,\n    border: '1px solid black',\n    cursor: 'pointer'\n}\n\nconst CameraButtons = ({}) => {\n\n    const sets = {\n        // model_3\n        1: {\n            cameraPos: [9,2,4],\n            target: [4,0,0],\n            name: \"Capot001_CAR_PAINT_0\"\n        },\n        // model_s\n        2: {\n            cameraPos: [1,2,5],\n            target: [-4,0,0],\n            name: \"object005_bod_0\"\n        }\n    }\n\n    const handleClick = num => {\n        state.cameraPos.set(...sets[num].cameraPos)\n        state.target.set(...sets[num].target)\n        state.activeMeshName = sets[num].name\n        state.shouldUpdate = true\n    }\n    return (\n        <> \n            <button\n                onClick={e => handleClick(2)}\n                style={{\n                    left: '40vw',\n                    ...style\n                }}\n            >\n                {'<'}\n            </button>\n            <button\n                onClick={e => handleClick(1)}\n                style={{\n                    right: '40vw',\n                    ...style\n                }}\n            >\n                {'>'}\n            </button>\n        </>\n    )\n}\n\nexport default CameraButtons","import Bulb from './Bulb'\n\nconst Lights = ({}) => {\n    return (\n        <>\n            <ambientLight intensity={0.2}/>\n            <directionalLight \n                // shadow-mapSize-height={2**10}\n                // shadow-mapSize-width={2**10}\n                // shadow-radius={10}\n                intensity={0.5}\n                position={[6,3,0]}\n                // castShadow\n            />\n            <Bulb position={[-6,3,0]} />\n            <Bulb position={[0,3,0]} />\n            <Bulb position={[6, 3, 0]} />\n        </>\n    )\n}\n\nexport default Lights","import './App.css';\nimport { \n  Canvas\n} from 'react-three-fiber';\nimport { Physics } from 'use-cannon';\nimport { Suspense } from 'react';\nimport Orbit from './components/Orbit';\nimport Box from './components/Box';\nimport Background from './components/Background';\nimport Floor from './components/Floor';\nimport Bulb from './components/Bulb';\nimport ColorPicker from './components/ColorPicker';\nimport Cars from './components/Cars'\nimport CameraControls from './components/CameraControls'\nimport CameraButtons from './components/CameraButtons'\nimport Lights from './components/Lights'\nimport { \n  EffectComposer, \n  DepthOfField,\n  Bloom\n} from 'react-postprocessing'\nimport state from './state'\n\nfunction App() {\n  return (\n    <div style={{height: '100vh', width: '100vw'}}>\n      <ColorPicker />\n      <CameraButtons />\n      <Canvas \n        shadowMap\n        style={{background: 'black'}} \n        camera={{ position: [7,7,7] }}\n      >\n        <Suspense fallback={null}>\n          <Background />\n        </Suspense>\n        <CameraControls />\n        <Lights/>\n        <Orbit />\n        <Physics>\n          <Cars />\n          <Floor position={[0,-0.5,0]}/>\n        </Physics>\n        <EffectComposer>\n          <DepthOfField \n            focusDistance={0} \n            focalLength={0.02} \n            bokehScale={2} \n            height={480}\n          />\n        </EffectComposer>\n      </Canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}